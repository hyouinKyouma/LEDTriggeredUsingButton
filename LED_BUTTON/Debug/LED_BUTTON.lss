
LED_BUTTON.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000038  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000035e  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000110  00000000  00000000  000005d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001e0  00000000  00000000  000006e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000054  00000000  00000000  000008c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000187  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000028  00000000  00000000  00000aa3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec eb       	ldi	r30, 0xBC	; 188
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 c2 00 	call	0x184	; 0x184 <main>
  7a:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <func1>:

void func1()
{
	
	
		PC3ON;
  82:	ab 9a       	sbi	0x15, 3	; 21
		PC4ON;
  84:	ac 9a       	sbi	0x15, 4	; 21
		PC5ON;
  86:	ad 9a       	sbi	0x15, 5	; 21
		PC6ON;
  88:	ae 9a       	sbi	0x15, 6	; 21
		PC7ON;
  8a:	af 9a       	sbi	0x15, 7	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f e3       	ldi	r18, 0x3F	; 63
  8e:	8d e0       	ldi	r24, 0x0D	; 13
  90:	93 e0       	ldi	r25, 0x03	; 3
  92:	21 50       	subi	r18, 0x01	; 1
  94:	80 40       	sbci	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <func1+0x10>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <func1+0x1a>
  9c:	00 00       	nop
		_delay_ms(delay);
		PC3OFF;
  9e:	ab 98       	cbi	0x15, 3	; 21
		PC4OFF;
  a0:	ac 98       	cbi	0x15, 4	; 21
		PC5OFF;
  a2:	ad 98       	cbi	0x15, 5	; 21
		PC6OFF;
  a4:	ae 98       	cbi	0x15, 6	; 21
		PC7OFF;
  a6:	af 98       	cbi	0x15, 7	; 21
  a8:	2f e3       	ldi	r18, 0x3F	; 63
  aa:	8d e0       	ldi	r24, 0x0D	; 13
  ac:	93 e0       	ldi	r25, 0x03	; 3
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	80 40       	sbci	r24, 0x00	; 0
  b2:	90 40       	sbci	r25, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <func1+0x2c>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <func1+0x36>
  b8:	00 00       	nop
  ba:	08 95       	ret

000000bc <func2>:
}
void func2()
{
	
	
		PC3ON;
  bc:	ab 9a       	sbi	0x15, 3	; 21
		PC4OFF;
  be:	ac 98       	cbi	0x15, 4	; 21
		PC5ON;
  c0:	ad 9a       	sbi	0x15, 5	; 21
		PC6OFF;
  c2:	ae 98       	cbi	0x15, 6	; 21
		PC7ON;
  c4:	af 9a       	sbi	0x15, 7	; 21
  c6:	2f e3       	ldi	r18, 0x3F	; 63
  c8:	8d e0       	ldi	r24, 0x0D	; 13
  ca:	93 e0       	ldi	r25, 0x03	; 3
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	80 40       	sbci	r24, 0x00	; 0
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <func2+0x10>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <func2+0x1a>
  d6:	00 00       	nop
		_delay_ms(delay);
		PC3OFF;
  d8:	ab 98       	cbi	0x15, 3	; 21
		PC4ON;
  da:	ac 9a       	sbi	0x15, 4	; 21
		PC5OFF;
  dc:	ad 98       	cbi	0x15, 5	; 21
		PC6ON;
  de:	ae 9a       	sbi	0x15, 6	; 21
		PC7OFF;
  e0:	af 98       	cbi	0x15, 7	; 21
  e2:	2f e3       	ldi	r18, 0x3F	; 63
  e4:	8d e0       	ldi	r24, 0x0D	; 13
  e6:	93 e0       	ldi	r25, 0x03	; 3
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <func2+0x2c>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <func2+0x36>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <func3>:
}
void func3()
{
	
	
		PC3ON;
  f6:	ab 9a       	sbi	0x15, 3	; 21
		PC4OFF;
  f8:	ac 98       	cbi	0x15, 4	; 21
		PC5OFF;
  fa:	ad 98       	cbi	0x15, 5	; 21
		PC6OFF;
  fc:	ae 98       	cbi	0x15, 6	; 21
		PC7OFF;
  fe:	af 98       	cbi	0x15, 7	; 21
 100:	2f e3       	ldi	r18, 0x3F	; 63
 102:	8d e0       	ldi	r24, 0x0D	; 13
 104:	93 e0       	ldi	r25, 0x03	; 3
 106:	21 50       	subi	r18, 0x01	; 1
 108:	80 40       	sbci	r24, 0x00	; 0
 10a:	90 40       	sbci	r25, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <func3+0x10>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <func3+0x1a>
 110:	00 00       	nop
		_delay_ms(delay);
		PC3OFF;
 112:	ab 98       	cbi	0x15, 3	; 21
		PC4ON;
 114:	ac 9a       	sbi	0x15, 4	; 21
		PC5OFF;
 116:	ad 98       	cbi	0x15, 5	; 21
		PC6OFF;
 118:	ae 98       	cbi	0x15, 6	; 21
		PC7OFF;
 11a:	af 98       	cbi	0x15, 7	; 21
 11c:	2f e3       	ldi	r18, 0x3F	; 63
 11e:	8d e0       	ldi	r24, 0x0D	; 13
 120:	93 e0       	ldi	r25, 0x03	; 3
 122:	21 50       	subi	r18, 0x01	; 1
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <func3+0x2c>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <func3+0x36>
 12c:	00 00       	nop
		_delay_ms(delay);
		PC3OFF;
 12e:	ab 98       	cbi	0x15, 3	; 21
		PC4OFF;
 130:	ac 98       	cbi	0x15, 4	; 21
		PC5ON;
 132:	ad 9a       	sbi	0x15, 5	; 21
		PC6OFF;
 134:	ae 98       	cbi	0x15, 6	; 21
		PC7OFF;
 136:	af 98       	cbi	0x15, 7	; 21
 138:	2f e3       	ldi	r18, 0x3F	; 63
 13a:	8d e0       	ldi	r24, 0x0D	; 13
 13c:	93 e0       	ldi	r25, 0x03	; 3
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <func3+0x48>
 146:	00 c0       	rjmp	.+0      	; 0x148 <func3+0x52>
 148:	00 00       	nop
		_delay_ms(delay);
		PC3OFF;
 14a:	ab 98       	cbi	0x15, 3	; 21
		PC4OFF;
 14c:	ac 98       	cbi	0x15, 4	; 21
		PC5OFF;
 14e:	ad 98       	cbi	0x15, 5	; 21
		PC6ON;
 150:	ae 9a       	sbi	0x15, 6	; 21
		PC7OFF;
 152:	af 98       	cbi	0x15, 7	; 21
 154:	2f e3       	ldi	r18, 0x3F	; 63
 156:	8d e0       	ldi	r24, 0x0D	; 13
 158:	93 e0       	ldi	r25, 0x03	; 3
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <func3+0x64>
 162:	00 c0       	rjmp	.+0      	; 0x164 <func3+0x6e>
 164:	00 00       	nop
		_delay_ms(delay);
		PC3OFF;
 166:	ab 98       	cbi	0x15, 3	; 21
		PC4OFF;
 168:	ac 98       	cbi	0x15, 4	; 21
		PC5OFF;
 16a:	ad 98       	cbi	0x15, 5	; 21
		PC6OFF;
 16c:	ae 98       	cbi	0x15, 6	; 21
		PC7ON;
 16e:	af 9a       	sbi	0x15, 7	; 21
 170:	2f e3       	ldi	r18, 0x3F	; 63
 172:	8d e0       	ldi	r24, 0x0D	; 13
 174:	93 e0       	ldi	r25, 0x03	; 3
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <func3+0x80>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <func3+0x8a>
 180:	00 00       	nop
 182:	08 95       	ret

00000184 <main>:
		_delay_ms(delay);
	
}
int main(void)
{	
	DDRA=0xf8;
 184:	88 ef       	ldi	r24, 0xF8	; 248
 186:	8a bb       	out	0x1a, r24	; 26
	PORTA|=(1<<PC0)|(1<<PC2)|(1<<PC1);
 188:	8b b3       	in	r24, 0x1b	; 27
 18a:	87 60       	ori	r24, 0x07	; 7
 18c:	8b bb       	out	0x1b, r24	; 27
	while(1)
	{
		if (bta1)
 18e:	c8 99       	sbic	0x19, 0	; 25
 190:	03 c0       	rjmp	.+6      	; 0x198 <main+0x14>
			func1();
 192:	0e 94 41 00 	call	0x82	; 0x82 <func1>
 196:	fb cf       	rjmp	.-10     	; 0x18e <main+0xa>
		else if(bta2)
 198:	c9 99       	sbic	0x19, 1	; 25
 19a:	03 c0       	rjmp	.+6      	; 0x1a2 <main+0x1e>
			func2();
 19c:	0e 94 5e 00 	call	0xbc	; 0xbc <func2>
 1a0:	f6 cf       	rjmp	.-20     	; 0x18e <main+0xa>
		else if(bta3)
 1a2:	ca 99       	sbic	0x19, 2	; 25
 1a4:	03 c0       	rjmp	.+6      	; 0x1ac <main+0x28>
			func3();
 1a6:	0e 94 7b 00 	call	0xf6	; 0xf6 <func3>
 1aa:	f1 cf       	rjmp	.-30     	; 0x18e <main+0xa>
		else
		{
			PC3OFF;
 1ac:	ab 98       	cbi	0x15, 3	; 21
			PC4OFF;
 1ae:	ac 98       	cbi	0x15, 4	; 21
			PC5OFF;
 1b0:	ad 98       	cbi	0x15, 5	; 21
			PC6OFF;
 1b2:	ae 98       	cbi	0x15, 6	; 21
			PC7OFF;
 1b4:	af 98       	cbi	0x15, 7	; 21
 1b6:	eb cf       	rjmp	.-42     	; 0x18e <main+0xa>

000001b8 <_exit>:
 1b8:	f8 94       	cli

000001ba <__stop_program>:
 1ba:	ff cf       	rjmp	.-2      	; 0x1ba <__stop_program>
